# Generated by Django 5.1.7 on 2025-07-07 16:42

import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, verbose_name='ID unique')),
                ('email', models.EmailField(help_text='Adresse utilisée pour la connexion', max_length=254, unique=True, verbose_name='adresse email')),
                ('first_name', models.CharField(help_text="Prénom de l'utilisateur", max_length=150, verbose_name='prénom')),
                ('last_name', models.CharField(help_text="Nom de l'utilisateur", max_length=150, verbose_name='nom')),
                ('role', models.CharField(choices=[('ADMIN', 'Administrateur'), ('ACCUEIL', 'Accueil'), ('JURISTE', 'Juriste'), ('CONSEILLER', 'Conseiller')], default='CONSEILLER', help_text="Rôle attribué à l'utilisateur", max_length=32, verbose_name='rôle')),
                ('is_staff', models.BooleanField(default=False, help_text="Peut accéder à l'admin Django", verbose_name='membre du staff')),
                ('is_superuser', models.BooleanField(default=False, help_text='Possède tous les droits', verbose_name='superutilisateur')),
                ('is_active', models.BooleanField(default=True, help_text="Contrôle si l'utilisateur peut se connecter", verbose_name='actif')),
                ('date_joined', models.DateTimeField(auto_now_add=True, help_text='Date de création du compte', verbose_name="date d'inscription")),
                ('avatar', models.URLField(blank=True, help_text='URL de la photo de profil', max_length=500, null=True, verbose_name='avatar')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'utilisateur',
                'verbose_name_plural': 'utilisateurs',
                'ordering': ['-date_joined'],
                'indexes': [models.Index(fields=['email'], name='user_email_idx'), models.Index(fields=['date_joined'], name='user_joined_idx')],
            },
        ),
    ]
